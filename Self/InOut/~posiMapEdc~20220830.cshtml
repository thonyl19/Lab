@using System.Dynamic
@model BLL.MES.DataViews.LotData
@{
	bool isSingleModel = (bool)ViewData["SingleModel"];
	dynamic data = new ExpandoObject();
	data.LOT="Test";
	Model.CurrentLot = data;
	if (isSingleModel)
	{
		Layout = "~/Views/Shared/_LayoutSingle.cshtml";
	}
}
@eBundle.QRender_CSS()
@eBundle.QRender_JS()
@Html.Partial("~/Areas/MES/Views/WIP/Partial2/_posiMapEDC.cshtml", @Model)
@Html.Partial("~/Areas/MES/Views/Shared/_edc.cshtml")
@Html.Partial("~/Areas/WIP/Views/Shared/_reason.cshtml")

<pre>
\Partial2\_posiMap.cshtml
</pre>
<div id="app">
    <div class="panel b">
        [readonly]<el-checkbox v-model="readonly"></el-checkbox>
        [confirm]<el-checkbox v-model="confirm"></el-checkbox>
        [highlight]<el-checkbox v-model="highlight"></el-checkbox>
        <el-button @@click="test">test</el-button>
        [isChange]{{isChange}}
        <cp-posi-map-edc ref="posi_map"
                         :list.sync="list" :src_mo="srcMO"
                         :readonly="readonly" :confirm="confirm" :highlight="highlight"
                         >
            <template v-slot:default="{current}" :cfg.sync="cfg" :readonly="readonly">
                <gt-hr content="@Face.OperDefectInfo">
                    <el-table :data="current.src.Defects"
                              empty-text=" "
                              style="width: 100%">
                        <el-table-column fixed="left" prop="SID"   width="100px;">
                            <template slot="header" slot-scope="scope">
                                <i class="btn btn-primary btn-sm fa fa-plus" v-on:click="Remove(scope.row)"></i>
                            </template>
                            <template slot-scope="scope">
                                <el-button size="small" v-on:click="Remove(scope.row)" type="danger" icon="el-icon-delete" circle></el-button>
                            </template>
                        </el-table-column>
                        <el-table-column prop="Display" label="@Face.Defect">
                            <template #default="{row}" >
                                <vue-selectize v-model="row.No"
                                               :options="defect_src"
                                               render_sty="GTIMES"
                                               :icon_search="false"></vue-selectize>
                            </template>
                        </el-table-column>
                        <el-table-column prop="INum" label="@Face.DefectQty">
                            <template #default="{row}">
                                <vue-selectize v-model="row.No"
                                               :options="defect_src"
                                               render_sty="GTIMES"
                                               :icon_search="false"></vue-selectize>
                            </template>
                        </el-table-column>
                    </el-table>
                </gt-hr>
                <gt-hr content="@Face.lblEDC_DATA">
                    <edc-input ref="edc_input" v-model="current.src.EdcList">
                        <template v-slot:head-area>
                            <el-button type="primary" size="mini" plain
                                       @@click="e_FetchLogFile"
                                       style="float:right;margin-right:1rem;"
                                       v-show="c_ShowImportLog">載入Log</el-button>
                        </template>
                        <a></a>
                    </edc-input>
                </gt-hr>
                {{current.src.EdcList}}
            </template>
        </cp-posi-map-edc>
    </div>
    {{list}}
</div>


<script>
    Vue.config.devtools = true;
    $(() => {
        var data_input = [
            {
                "EdcVerSid": "GTI19040815103300013",
                "EdcParameterSid": "GTI19040815002800001",
                "Display": "TestBool",
                "DataType": "B",
                "mustInput": "T",
                "InputCount": 3,
                "ItemName": "TestBool",
                "ItemNo": "Test001",
                "DispayPointName": "A,B,C",
                "DispayPointNameList": [
                    "Aaaaa",
                    "Bbbbbb",
                    "Ccccc"
                ],
                "QCItemSID": "GTI19040815002800001",
                "UCL": 0,
                "USL": 0,
                "TL": "F",
                "LCL": 0,
                "LSL": 0,
                "require": false,
                "DataTypeDisplay": "布林",
                "InputValueList": [
                    {
                        "Aaaaa": ""
                    },
                    {
                        "Bbbbbb": ""
                    },
                    {
                        "Ccccc": ""
                    }
                ]
            },
            {
                "EdcVerSid": "GTI19040815103300013",
                "EdcParameterSid": "GTI19040815015300007",
                "Display": "string",
                "DataType": "S",
                "mustInput": "T",
                "InputCount": 1,
                "ItemName": "string",
                "ItemNo": "test003",
                "DispayPointName": "A",
                "DispayPointNameList": [
                    "Aaaaa"
                ],
                "QCItemSID": "GTI19040815015300007",
                "UCL": 0,
                "USL": 0,
                "TL": "T",
                "LCL": 0,
                "LSL": -10,
                "require": false,
                "DataTypeDisplay": "字串",
                "InputValueList": [
                    {
                        "Aaaaa": ""
                    }
                ]
            },
            {
                "EdcVerSid": "GTI19040815103300013",
                "EdcParameterSid": "GTI19040815013900006",
                "Display": "Display",
                "DataType": "N",
                "MustInput": "T",
                "InputCount": 1,
                "ItemName": "數值,負數值測試",
                "ItemNo": "Test002",
                "DispayPointName": "A",
                "DispayPointNameList": [
                    "Aaaaaa", "Bbbbb"
                ],
                "QCItemSID": "GTI19040815013900006",
                "UCL": 100,
                "USL": 150,
                "TL": "50",
                "LCL": -10,
                "LSL": -10,
                "require": true,
                "DataTypeDisplay": "數值,負數值測試",
                "InputValueList": [
                    {
                        "Aaaaa": ""
                    }
                ]
            },
            {
                "EdcVerSid": "GTI19040815103300013",
                "EdcParameterSid": "GTI19040815013900006",
                "Display": "Display",
                "DataType": "N",
                "MustInput": "T",
                "InputCount": 1,
                "ItemName": "單邊null",
                "ItemNo": "Test002",
                "DispayPointName": "A",
                "DispayPointNameList": [
                    "Aaaaaa", "Bbbbb"
                ],
                "QCItemSID": "GTI19040815013900006",
                "UCL": 100,
                "USL": 150,
                "TL": "50",
                "LCL": null,
                "LSL": null,
                "require": true,
                "DataTypeDisplay": "下限null",
                "InputValueList": [
                    {
                        "Aaaaa": ""
                    }
                ]
            },
            {
                "EdcVerSid": "GTI19040815103300013",
                "EdcParameterSid": "GTI19040815013900006",
                "Display": "Display",
                "DataType": "N",
                "MustInput": "T",
                "InputCount": 1,
                "ItemName": "單邊null",
                "ItemNo": "Test002",
                "DispayPointName": "A",
                "DispayPointNameList": [
                    "Aaaaaa", "Bbbbb"
                ],
                "QCItemSID": "GTI19040815013900006",
                "UCL": null,
                "USL": null,
                "TL": "50",
                "LCL": 100,
                "LSL": 150,
                "require": true,
                "DataTypeDisplay": "上限null",
                "InputValueList": [
                    {
                        "Aaaaa": ""
                    }
                ]
            }
        ]
        var list = {
            "1": {
                "SID": "GTI22031515092745372",
                "ROOT_SID": "GTI22030915340037695",
                "PARENT_SID": null,
                "PREV_SEAIAL": null,
                "SN": 1,
                "SN_ID": "CrystalGrowth_WO01-01.02.0",
                "STATUS": null,
                "REASON": null,
                "ChangeFrom": null,
                "val": "GTI22031515092745372",
                "sts": "0"
            },
            "2": {
                "SID": "GTI22031515092745373",
                "ROOT_SID": "GTI22030915340037695",
                "PARENT_SID": null,
                "PREV_SEAIAL": null,
                "SN": 2,
                "SN_ID": "CrystalGrowth_WO01-01.02.1",
                "STATUS": null,
                "REASON": null,
                "ChangeFrom": null,
                "ChangeFromSN": 5,
                "val": "GTI22031515092745373",
                "sts": "0"
            },
            "3": {
                "SID": "GTI22031515092745374",
                "ROOT_SID": "GTI22030915340037695",
                "PARENT_SID": null,
                "PREV_SEAIAL": null,
                "SN": 3,
                "SN_ID": "CrystalGrowth_WO01-01.02.2",
                "STATUS": null,
                "REASON": null,
                "ChangeFrom": null,
                "val": "GTI22031515092745374",
                "sts": "0"
            },
            "4": {
                "SID": "GTI22031515092745375",
                "ROOT_SID": "GTI22030915340037695",
                "PARENT_SID": null,
                "PREV_SEAIAL": null,
                "SN": 4,
                "SN_ID": "CrystalGrowth_WO01-01.02.3",
                "STATUS": null,
                "REASON": null,
                "ChangeFrom": null,
                "val": "GTI22031515092745375",
                "sts": "0"
            },
            "5": {
                "SID": "GTI22031515092745376",
                "ROOT_SID": "GTI22030915340037695",
                "PARENT_SID": null,
                "PREV_SEAIAL": null,
                "SN": 5,
                "SN_ID": "CrystalGrowth_WO01-01.02.4",
                "STATUS": null,
                "REASON": null,
                "ChangeFrom": null,
                "val": "GTI22031515092745376",
                "sts": "0"
            },
            "6": {
                "SID": "GTI22031515092745377",
                "ROOT_SID": "GTI22030915340037695",
                "PARENT_SID": null,
                "PREV_SEAIAL": null,
                "SN": 6,
                "SN_ID": "CrystalGrowth_WO01-01.02.5",
                "STATUS": null,
                "REASON": null,
                "ChangeFrom": null,
                "val": "GTI22031515092745377",
                "sts": "0"
            },


        };
        var Defects = [{ "SID": "GTI22050311422156058", "No": "DEFECT_004", "Display": "Surface Phase", "INum": "3" }];
            _.each(list, (val, key) => {
                val.EdcList = _.cloneDeep(data_input);
                val.Defects = _.cloneDeep(Defects);
            })
        var send_data = @Html.Raw(ViewData["result"] ?? "{}");
        var srcMO = _.range(1, 25).map((el) => { return [el]; });
        new Vue({
            el: '#app',
            provide() {
                return {
                    rootEl: this,
                };
            },
            data() {
                return {
                    Setting: {
                        CheckOutSet: {
                            IsWaferLogEDC: true
                        }
                    },
                    data_input,
                    value: '',
                    tab_idx: '位置',
                    readonly: false,
                    confirm: true,
                    highlight: false,
                    srcMO,
                    list,
                    cfg: {
                        title: '',
                        fixedTip: 2
                    },
                    reason: [{ "RefKey": null, "SID": "GTI11110115550180956", "No": "other", "Value": "GTI11110115550180956", "Display": "其他", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI20101919411379902", "No": "R.C01-0002", "Value": "GTI20101919411379902", "Display": "ALD.鎳銅片變形", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI20101919423979906", "No": "R.C01-0004", "Value": "GTI20101919423979906", "Display": "ALD.鎳片壓傷", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI20101919425979908", "No": "R.C01-0005", "Value": "GTI20101919425979908", "Display": "ALD.晶片溢錫", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI20101919431879910", "No": "R.C01-0006", "Value": "GTI20101919431879910", "Display": "ALD.鎳片溢錫", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI20101919415579904", "No": "R.C01-0003", "Value": "GTI20101919415579904", "Display": "ALD.晶片壓傷", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI21050518014931812", "No": "111", "Value": "GTI21050518014931812", "Display": "111", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI21081615532603712", "No": "1123", "Value": "GTI21081615532603712", "Display": "1123", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }],
                    isChange: false,
                    defect_src:[{ "RefKey": null, "SID": "GTI22050311422156056", "No": "DEFECT_002", "Value": null, "Display": "Inclusion", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156057", "No": "DEFECT_003", "Value": null, "Display": "Surface Pits", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156058", "No": "DEFECT_004", "Value": null, "Display": "Surface Phase", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156059", "No": "DEFECT_005", "Value": null, "Display": "Seed etching", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156060", "No": "DEFECT_006", "Value": null, "Display": "Poly line", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156061", "No": "DEFECT_007", "Value": null, "Display": "Poly 外包嚴重", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156062", "No": "DEFECT_008", "Value": null, "Display": "1 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156063", "No": "DEFECT_009", "Value": null, "Display": "2 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156064", "No": "DEFECT_010", "Value": null, "Display": "3 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156065", "No": "DEFECT_011", "Value": null, "Display": "4 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156066", "No": "DEFECT_012", "Value": null, "Display": "5 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156067", "No": "DEFECT_013", "Value": null, "Display": "6 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156068", "No": "DEFECT_014", "Value": null, "Display": "7 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156069", "No": "DEFECT_015", "Value": null, "Display": "8 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156070", "No": "DEFECT_016", "Value": null, "Display": "9 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156071", "No": "DEFECT_017", "Value": null, "Display": "10 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156072", "No": "DEFECT_018", "Value": null, "Display": "11 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156073", "No": "DEFECT_019", "Value": null, "Display": "12 點鐘", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156074", "No": "DEFECT_020", "Value": null, "Display": "晶體內凹", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156075", "No": "DEFECT_021", "Value": null, "Display": "15R", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156076", "No": "DEFECT_022", "Value": null, "Display": "6H", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156077", "No": "DEFECT_023", "Value": null, "Display": "龜殼紋", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }, { "RefKey": null, "SID": "GTI22050311422156078", "No": "DEFECT_024", "Value": null, "Display": "燒乾", "StatusSid": null, "Status": null, "FromNum": 0, "INum": 0, "Attr01": null, "Attr02": null, "Attr03": null }]

                }
            },
            computed: {
                c_ShowImportLog() {
                    let { IsWaferLogEDC = false } = this.Setting.CheckOutSet;
                    return IsWaferLogEDC;
                },
                c_test() {
                    let { posi_map = {} } = this.$refs;
                    return posi_map?.current || {};
                },
                c_list: {
                    get() {
                        return JSON.stringify(this.list);
                    },
                    set(val) {
                        try {
                            debugger
                            var r = JSON.parse(val);
                            this.list = r;
                            this.$refs.posi_map.Bind();
                        } catch (e) {

                        }
                    }
                }
            },
            methods: {
                e_FetchLogFile() {

                    var _self = this;
                    var cassetteInfo = {};
                    var allWafer = Object.values(this.send_data.PosiMap);
                    this.send_data.lotList.forEach(x => {
                        cassetteInfo[x.LotSID] = allWafer.filter(f => f.LOT == x.Lot).map(m => m.SN_ID);
                    });

                    var _ajax = {
                        url: "@Genesis.Common.PageBaseInfo.GetBaseUrl()/api/info/PreloadEDCFromGssLog",
                        type: 'POST',
                        param: JSON.stringify(cassetteInfo),
                        contentType: 'application/json',
                        automessage: false,
                        success: (res) => {
                            let { Success, Message, Data, Exception } = res;
                            if (Success) {
                                let { EdcLog } = Data;
                                _.each(EdcLog, (Log, WaferSN) => {

                                    var _mapPosi = _.find(_self.$refs.posi.srcPOSI, (o) => { return o.Value == WaferSN });
                                    if (_mapPosi != null) {
                                        _.each(Log, el => {
                                            var _EdcSid = el.EdcParameterSid;
                                            var _mapEdc = _.find(_mapPosi.src.EdcList, (o) => { return o.EdcParameterSid == _EdcSid });
                                            if (_mapEdc != null) {
                                                //var values = el.InputValueList.map(x => Object.values(x)[0]);
                                                //console.log(values);
                                                //_mapEdc.InputValueList = values;
                                                var values = el.InputValueList.map((x, idx) => {
                                                    var item = {};
                                                    item[idx + 1] = Object.values(x)[0];
                                                    return item;
                                                });
                                                _mapEdc.InputValueList = values;
                                                //_mapEdc.InputValueList = el.InputValueList;
                                                _self.isChange = true;
                                            }
                                        })
                                    }

                                });
                            } else {
                                console.log(Message);
                                _self.$alert(Message, '提示', {
                                    type: 'warning'
                                });
                            }
                        }
                    };

                    $.submitForm(_ajax);

                },
                //這一段程序 ,是為了解決  edc 物件檢核的問題所採用的方法, 程序名稱 不能改
                CheckPointChange(current) {
                    var r = this.$refs.edc_input.check();
                    //console.log({ check_point_change: r });
                    return r;
                },
                handleClick() { },
                filterData() { },
                test() {
                    setTimeout(() => {
                        var d = [
                            {
                                "element": ".gt-form",
                                "popover": {
                                    "title": "輸入方式",
                                    "description": "可以選擇 [載具編號] 或 [批號] 執行查詢,查詢方式為 輸入完整資訊後,按 Enter "
                                },
                            },
                            {
                                "element": ".fa.fa-repeat",
                                "popover": {
                                    "title": "輸入方式",
                                    "description": "可以選擇 [載具編號] 或 [批號] 執行查詢,查詢方式為 輸入完整資訊後,按 Enter "
                                },
                            }];
                        var driver = new Driver();
                        driver.defineSteps(d);
                        driver.start();
                    }, 500);
                    this.$nextTick(() => {

                    })
                }
            }
        })
    });
</script>
