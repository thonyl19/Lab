@using System.Dynamic
@model BLL.MES.DataViews.LotData
@{
	bool isSingleModel = (bool)ViewData["SingleModel"];
	dynamic data = new ExpandoObject();
	data.LOT="Test";
	Model.CurrentLot = data;
	if (isSingleModel)
	{
		Layout = "~/Views/Shared/_LayoutSingle.cshtml";
	}
}
@eBundle.QRender_CSS()
@eBundle.QRender_JS()
@Html.Partial("~/Areas/MES/Views/WIP/Partial2/_posiMap.cshtml", @Model)
<pre>
\Partial2\_selectUsers.cshtml
</pre>
<div id="app">
    <div class="panel b">
        [readonly]<el-checkbox v-model="readonly"></el-checkbox>
        [confirm]<el-checkbox v-model="confirm"></el-checkbox>
        [highlight]<el-checkbox v-model="highlight"></el-checkbox>
        <div class="panel-body">
            <el-tabs type="border-card" @@tab-click="handleClick">
                <el-tab-pane label="位置">
                    <cp-posi-map ref="posi_map"
                                 :list.sync="list" :src_mo="srcMO"
                                 :readonly="readonly" :confirm="confirm" :highlight="highlight"></cp-posi-map>
                </el-tab-pane>
                <el-tab-pane label="清單">
                    
                </el-tab-pane>
            </el-tabs>
            <el-input
              type="textarea"
              :autosize="{ minRows: 2, maxRows: 4}"
              v-model="c_list">
            </el-input>
        </div>
    </div>
</div>
 

<script>
    Vue.config.devtools = true;

    $(() => {
        var send_data = @Html.Raw(ViewData["result"] ?? "{}");
        var srcMO = _.range(1, 25).map((el) => { return [el]; });
        new Vue({
            el: '#app',
            data() {
                return {
                    value:'',
                    tab_idx:'位置',
                    readonly: false,
                    confirm: false,
                    highlight:false,
                    srcMO,
                    list: {
                        "1": {
                            "SID": "GTI22031515092745372",
                            "ROOT_SID": "GTI22030915340037695",
                            "PARENT_SID": null,
                            "PREV_SEAIAL": null,
                            "SN": 1,
                            "SN_ID": "CrystalGrowth_WO01-01.02.0",
                            "STATUS": null,
                            "REASON": null,
                            "ChangeFrom": null,
                            "val": "GTI22031515092745372",
                            "sts": "0"
                        },
                        "2": {
                            "SID": "GTI22031515092745373",
                            "ROOT_SID": "GTI22030915340037695",
                            "PARENT_SID": null,
                            "PREV_SEAIAL": null,
                            "SN": 2,
                            "SN_ID": "CrystalGrowth_WO01-01.02.1",
                            "STATUS": null,
                            "REASON": null,
                            "ChangeFrom": null,
                            "ChangeFromSN": 5,
                            "val": "GTI22031515092745373",
                            "sts": "0"
                        },
                        "3": {
                            "SID": "GTI22031515092745374",
                            "ROOT_SID": "GTI22030915340037695",
                            "PARENT_SID": null,
                            "PREV_SEAIAL": null,
                            "SN": 3,
                            "SN_ID": "CrystalGrowth_WO01-01.02.2",
                            "STATUS": null,
                            "REASON": null,
                            "ChangeFrom": null,
                            "val": "GTI22031515092745374",
                            "sts": "0"
                        },
                        "4": {
                            "SID": "GTI22031515092745375",
                            "ROOT_SID": "GTI22030915340037695",
                            "PARENT_SID": null,
                            "PREV_SEAIAL": null,
                            "SN": 4,
                            "SN_ID": "CrystalGrowth_WO01-01.02.3",
                            "STATUS": null,
                            "REASON": null,
                            "ChangeFrom": null,
                            "val": "GTI22031515092745375",
                            "sts": "0"
                        },
                        "5": {
                            "SID": "GTI22031515092745376",
                            "ROOT_SID": "GTI22030915340037695",
                            "PARENT_SID": null,
                            "PREV_SEAIAL": null,
                            "SN": 5,
                            "SN_ID": "CrystalGrowth_WO01-01.02.4",
                            "STATUS": null,
                            "REASON": null,
                            "ChangeFrom": null,
                            "val": "GTI22031515092745376",
                            "sts": "0"
                        },
                        "6": {
                            "SID": "GTI22031515092745377",
                            "ROOT_SID": "GTI22030915340037695",
                            "PARENT_SID": null,
                            "PREV_SEAIAL": null,
                            "SN": 6,
                            "SN_ID": "CrystalGrowth_WO01-01.02.5",
                            "STATUS": null,
                            "REASON": null,
                            "ChangeFrom": null,
                            "val": "GTI22031515092745377",
                            "sts": "0"
                        },


                    }
                }
            },
            computed: {
                c_test() {
                    let { posi_map = {} } = this.$refs;
                    return posi_map?.current || {};
                },
                c_list: {
                    get() {
                        return JSON.stringify(this.list);
                    },
                    set(val) {
                        try {
                            debugger
                            var r = JSON.parse(val);
                            this.list = r;
                            this.$refs.posi_map.Bind();
                        } catch (e) {

                        }
                    }
                }
            },
            methods: {
                handleClick() { },
                filterData() { },
            }
        })
    });
</script>
