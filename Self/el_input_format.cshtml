@{
	bool isSingleModel = (bool)ViewData["SingleModel"];
	ViewBag.Title ="el-input-format 範例";
	if (isSingleModel){
		Layout = "~/Views/Shared/_LayoutSingle.cshtml";
	}
	@eBundle.QRender_CSS();
	@eBundle.QRender_JS();
}

<h3>
	@ViewBag.Title
	<small><a href="https://genesisoffice365.sharepoint.com/:o:/r/sites/GTiMES50/_layouts/15/WopiFrame.aspx?sourcedoc={7175ca3d-ef9b-447d-a677-837671fc502f}&action=edit&wd=target%28UI%2Eone%7C0DA210C6%2DA155%2D4147%2DABA6%2DF995FD827BC6%2Fel%5Finput%5Fformat%7CBBFE5DA3%2D1364%2D4A31%2DA5A9%2D5653D3165472%2F%29onenote%3Ahttps%3A%2F%2Fgenesisoffice365%2Esharepoint%2Ecom%2Fsites%2FGTiMES50%2FSiteAssets%2FGTiMES%205%2E0%20%E9%96%8B%E7%99%BC%20%E7%AD%86%E8%A8%98%E6%9C%AC%2FUI%2Eone#el_input_format&section-id={0DA210C6-A155-4147-ABA6-F995FD827BC6}&page-id={BBFE5DA3-1364-4A31-A5A9-5653D3165472}&end" target="_blank">參考文件</a></small>
</h3>
<div id="app">
	[readonly]<input type="checkbox" v-model="readonly" />
	<h3>基本用法 - 預設直接帶千分位</h3>
	<el-input-format v-model="value_1" :readonly="readonly"></el-input-format>
	<h3>Function </h3>
	<el-input-format v-model="value_1" :format="testFun"></el-input-format>
	<h3>String </h3>
	<el-input-format v-model="value_1" format="Thousands"></el-input-format>
</div>


<script>
	$(() => {
		new Vue({
			el: '#app',
			data() {
				return {
					readonly: false,
					value_1: 100,
					msg: "baseTpl"
				}
			},
			methods: {
				testFun(val) {
					
					return val.toString().replace(/./g, "-");
				}
			}
		})
	});
</script>
