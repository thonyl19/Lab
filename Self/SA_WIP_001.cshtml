@using System.Dynamic
@{
	bool isSingleModel = (bool)ViewData["SingleModel"];
	dynamic data = new ExpandoObject();
    if (true)
	{
		Layout = "~/Views/Shared/_LayoutSingle.cshtml";
	}
    GTI_Test GTest = new GTI_Test(Html, ViewContext.HttpContext);
	ViewBag.Title = RES.BLL.Face.FunMapWOCreateLot;
	ViewBag.FunctionName = RES.BLL.Face.FunMapWOCreateLot;
}
@eBundle.QRender_CSS()
@eBundle.QRender_JS()
<h3>
    @ViewBag.Title
    <small></small>
</h3>

<div id="app" v-cloak>
    <div class="toolbar">
        <div class="btn-group">
            <el-button type="primary" class="btn-success"
                       icon="el-icon-caret-right"
                       v-on:click="Exec">
                @RES.BLL.Face.FunctionBarOKButton
            </el-button>
        </div>
        <div class="btn-group">
            <el-button type="primary" class="btn-block"
                       icon="el-icon-caret-right"
                       :disabled="isEmptyRow"
                       v-on:click="Save">
                @RES.BLL.Face.TaskBarSaveButton
            </el-button>
        </div>
    </div>
    <div class="panel b">

        <div class="panel-body row">
            <div class="gt-form">

                <div class="form-group col-lg-12 col-sm-12 ">
                    <label class="col-lg-2 col-sm-4 control-label">@RES.BLL.Face.WO</label>
                    <div class="col-lg-10 col-sm-8  has-success  has-feedback">
                        <input ref="WO" class="form-control" type="text" v-model="CurrentLot.WO"
                               placeholder="@RES.BLL.Message.PleaseInputWo" />
                    </div>
                </div>
            </div>
            <power-form-bts :quick="['製程','狀態','料號','品名','預計批號','ERP 備註','工單數量','單位','己建立子批批號數量','未建立子批批號數量']"></power-form-bts>
            <hr />
            <div class="gt-form">
                <div class="form-group col-lg-12 col-sm-12 ">
                    <label class="col-lg-2 col-sm-4 control-label">新增方式</label>
                    <div class="col-lg-10 col-sm-8  has-success  has-feedback">
                        <input class="form-check-input" v-model="CREATETYPE" value="Auto" required="required" type="radio">@RES.BLL.Face.AutoCreate
                        <input class="form-check-input" v-model="CREATETYPE" value="Menu" required="required" type="radio">@RES.BLL.Face.MenuCreate
                    </div>
                </div>
                <gt-form-col label="新增子批批號數量"></gt-form-col>
                <div class="form-group col-lg-12 col-sm-12 ">
                    <label class="col-lg-2 col-sm-4 control-label">列印</label>
                    <div class="col-lg-10 col-sm-8  has-success  has-feedback">
                        <vue-selectize class="col-lg-6"
                                       v-model="ops1.val"
                                       :options="ops1.ops"
                                       :selectize_ops="ops1.cfg"
                                       render_sty="GTIMES"></vue-selectize>
                        <vue-selectize class="col-lg-6" v-model="ops2.val"
                                       :options="ops2.ops"></vue-selectize>
                    </div>
                </div>
                <div class="clearfix hidden-xs"></div>
            </div>

            <el-tabs type="border-card">
                <el-tab-pane label="子批批號列表">
                    <el-table :data="LotInfoList" class="lot-list"
                              empty-text=" "
                              style="width: 100% ">
                        <el-table-column label="@RES.BLL.Face.Actions" width="90">
                            <template slot-scope="scope">
                                <button class="btn btn-default btn-sm"
                                        v-on:click="delGridRow(scope.$index, LotInfoList)" title="刪除">
                                    <i class="fa fa-2x fa-remove fa-fw"></i>
                                </button>
                            </template>
                        </el-table-column>
                        <el-table-column prop="LOT"
                                         label="子批批號"
                                         width="180">
                        </el-table-column>
                        <el-table-column prop="QUANTITY"
                                         label="@RES.BLL.Face.QUANTITY"
                                         width="180">
                        </el-table-column>
                        <el-table-column prop="UNIT"
                                         label="@RES.BLL.Face.UNIT"
                                         width="60">
                        </el-table-column>
                        <el-table-column prop="QTY_1"
                                         label="@RES.BLL.Face.Status"
                                         width="180">
                        </el-table-column>
                    </el-table>
                </el-tab-pane>
                <el-tab-pane label="新增子批批號">
                    <div class="btn-group">
                        <el-button type="primary" class="btn"
                                   icon="el-icon-delete">
                            @RES.BLL.Face.removeAll
                        </el-button>
                    </div>
                    <el-table :data="LotInfoList" class="lot-list"
                              empty-text=" "
                              style="width: 100% ">
                        <el-table-column label="@RES.BLL.Face.Actions" width="90">
                            <template slot-scope="scope">
                                <button class="btn btn-default btn-sm"
                                        v-on:click="delGridRow(scope.$index, LotInfoList)" title="刪除">
                                    <i class="fa fa-2x fa-remove fa-fw"></i>
                                </button>
                            </template>
                        </el-table-column>
                        <el-table-column prop="LOT"
                                         label="子批批號"
                                         width="180">
                        </el-table-column>
                        <el-table-column prop="QUANTITY"
                                         label="@RES.BLL.Face.QUANTITY"
                                         width="180">
                        </el-table-column>
                        <el-table-column prop="UNIT"
                                         label="@RES.BLL.Face.UNIT"
                                         width="60">
                        </el-table-column>
                        <el-table-column prop="QTY_1"
                                         label="@RES.BLL.Face.Status"
                                         width="180">
                        </el-table-column>








                </el-tab-pane>


            </el-tabs>
        </div>
    </div>

    @section Styles {
    @Styles.Render(eBundle.selectize_CSS)
    @Styles.Render(eBundle.elUI_CSS)

    }

    @section Scripts {
    @Scripts.Render(eBundle.selectize_JS)
    @Scripts.Render(eBundle.Vue_MES)
    @Scripts.Render(eBundle.elUI_JS)
    }

    <script>
        $(() => {
            const v = new Vue({

                el: '#app',
                data() {
                    return {
                        form: {
                            "流程": "流程",
                            "流程版本": "流程版本",
                            "總批數": "總批數",
                            "總數量": "總數量",
                            "判定結果": "判定結果",
                            "備註": "備註",
                            QUANTITY: 0
                        },
                        LotInfoList: [
                            { LOT: 'XXXXXXXX', QUANTITY: 1234, UNIT: 1234 }
                        ],
                        ops1: {
                            val: '',
                            ops: [
                                { 'Display': 'Microsoft Print to PDF', 'No': 'Microsoft Print to PDF' }
                            ],
                            cfg: {
                                tagField: 'Display'
                            }
                        },
                        ops2: {
                            val: '',
                            ops: [
                                { 'Display': 'RunCard btw', 'No': 'RunCard btw' }
                            ],
                        },
                        //201-20121129-33
                        CurrentLot: {},
                        ROUTE: "",
                        PRODUCT: "",
                        PartNo: "",
                        WOQty: "",
                        UNIT: "",
                        UnReleaseQty: "",
                        CREATELOTQTY: "",
                        QTY_1: "",
                        QTY_2: "",
                        exec_disabled: true,
                        CREATETYPE: "",

                    }

                },
                computed: {
                    isEmptyRow() {
                        return this.LotInfoList.length == 0;
                    },
                    WO() {
                        let { WO = "" } = this.CurrentLot;
                        return WO;
                    }
                },
                methods: {
                    msg_WOerror() {
                        let msg = '@string.Format(RES.BLL.Message.FieldRequired,@RES.BLL.Face.WO)';
                        this.$Alert.Err(msg);
                    },
                    msg_CreateLotQTYerror() {
                        let msg = '@string.Format(RES.BLL.Message.InputNumValue, @RES.BLL.Face.CreateLotQty)';
                        this.$Alert.Err(msg);
                    },
                    msg_UnReleaseQtyCREATELOTQTYerror() {
                        let msg = '@string.Format(RES.BLL.Message.NOTAgreat, @RES.BLL.Face.CreateLotQty, @RES.BLL.Face.UnReleaseQty)';
                        this.$Alert.Err(msg);
                    },
                    msg_CannotFindData() {
                        let { WO = "" } = this.CurrentLot;
                        var options = {
                            type: 'error',
                            title: '@RES.BLL.Message.CannotFindData'.replace('{0}', WO),
                            confirmButtonText: '@RES.BLL.Face.Close',
                        };
                        $.showMessageFire(options);
                    },
                    msg_WOCreateLotSuccessful() {
                        let { WO = "" } = this.CurrentLot;
                        var options = {
                            type: 'success',
                            title: '@RES.BLL.Message.CreateStartLotsuccessful',
                            timer: 1000 * 10,
                            confirmButtonText: '@RES.BLL.Face.Close',
                        };
                        $.showMessageFire(options);
                    },
                    Init_UI(isAfterSubmit = false) {
                        this.ROUTE = "";
                        this.PRODUCT = "";
                        this.PartNo = "";
                        this.WOQty = "";
                        this.UNIT = "";
                        this.UnReleaseQty = "";
                        this.CREATELOTQTY = "";
                        this.QTY_1 = "";
                        this.QTY_2 = "";
                        this.CREATETYPE = "";
                    },
                    delGridRow(index) {
                        debugger;
                        this.UnReleaseQty = parseFloat(this.UnReleaseQty) + parseFloat(this.LotInfoList[index].QUANTITY);
                        this.LotInfoList.splice(index, 1);

                    },
                    ClearList() {
                        debugger;
                        var _self = this;
                        var title = '@RES.BLL.Message.DeleteRecordConfirm';
                        var _ops = this.$Alert.genConfirm({ title });
                        var lotQTY = this.UnReleaseQty;
                        _self.LotInfoList.forEach(e => {
                            lotQTY = parseFloat(lotQTY) + parseFloat(e.QUANTITY);
                        });
                        Swal.fire(_ops).then(result => {
                            let { value } = result;
                            if (value) {
                                _self.UnReleaseQty = lotQTY;
                                _self.LotInfoList = [];
                            }
                        });
                    },
                    Exec() {
                        debugger;
                        var _self = this;
                        if (_self.ROUTE == "") return _self.msg_WOerror();
                        if (_self.CREATELOTQTY == 0 || _self.CREATELOTQTY == "") return _self.msg_CreateLotQTYerror();
                        if (_self.UnReleaseQty < _self.CREATELOTQTY) return _self.msg_UnReleaseQtyCREATELOTQTYerror();
                        if (_self.CREATETYPE == "Menu") {
                            //手動新增
                            _self.LotInfoList.push({
                                LOT: "Auto",
                                QUANTITY: _self.CREATELOTQTY,
                                UNIT: _self.UNIT,
                                QTY_1: _self.QTY_1,
                                QTY_2: _self.QTY_2,
                                WO: _self.WO,
                            });

                            _self.UnReleaseQty = _self.UnReleaseQty - _self.CREATELOTQTY;
                        } else {
                            //自動新增批號
                            var WOQty = _self.UnReleaseQty
                            var LotQty = 0;
                            var Flag = false;
                            while (Flag == false) {
                                if (WOQty > _self.CREATELOTQTY) {
                                    LotQty = _self.CREATELOTQTY;
                                }
                                else {
                                    LotQty = WOQty;
                                    Flag = true;
                                }
                                _self.LotInfoList.push({
                                    LOT: "Auto",
                                    QUANTITY: LotQty,
                                    UNIT: _self.UNIT,
                                    QTY_1: _self.QTY_1,
                                    QTY_2: _self.QTY_2,
                                    WO: _self.WO,
                                });

                                WOQty = WOQty - LotQty;
                                _self.UnReleaseQty = _self.UnReleaseQty - LotQty;
                                if (WOQty == 0) Flag = true;
                            };

                        };

                    },
                    Save() {
                        var _self = this;
                        debugger;
                        var _ajax = {
                            url: "@Url.Action("Save", new { area = "WIP" })",
                            type: 'post',
                            param: {
                                WO: _self.WO,
                                LotInfoList: _self.LotInfoList,
                                FunName: "WOCreateLot"
                            },
                            success(res) {
                                let { Success, Data = {} } = res;
                                if (Success) {
                                    _self.Init_UI(false);

                                    let { LotInfoList = [] } = Data;
                                    _self.LotInfoList = LotInfoList;
                                    _self.CurrentLot.WO = "";
                                    _self.msg_WOCreateLotSuccessful();
                                }
                                else {
                                    _self.msg_CannotFindData();
                                }
                            }
                        };
                        $.submitForm(_ajax);
                    },
                    api_WoInfo(WO, success_fn) {
                        var _ajax = {
                            url: "@Url.Action("GetWoInfo", new { area = "WIP" })",
                            type: 'get',
                            param: {
                                WO,
                            },
                            success: success_fn
                        };
                        return _ajax;
                    },
                    Query(WO) {
                        var _self = this;
                        //var isHasAdd = _.some(_self.LotInfoList, { WO });
                        //if (isHasAdd) return _self.msg_InputDataDuplicate();
                        _self.Init_UI();
                        _self.LotInfoList = [];
                        debugger;
                        var _ajax = _self.api_WoInfo
                            (WO,
                                (res) => {
                                    let { CurrentLot } = res;
                                    if (CurrentLot) {
                                        //_self.LotInfoList.push(CurrentLot);
                                        //if (ReasonList !=  null) _self.options = ReasonList;
                                        //if(RouteCodeList != null) _self.options1 = RouteCodeList;
                                        _self.ROUTE = CurrentLot.ROUTE;
                                        _self.PRODUCT = CurrentLot.PRODUCT;
                                        _self.PartNo = CurrentLot.PARTNO;
                                        _self.WOQty = CurrentLot.QUANTITY;
                                        _self.UNIT = CurrentLot.UNIT;
                                        _self.UnReleaseQty = CurrentLot.UNRELEASE_QUANTITY;
                                        _self.CREATELOTQTY = CurrentLot.LOT_SIZE;
                                        _self.QTY_1 = CurrentLot.QTY_1;
                                        _self.QTY_2 = CurrentLot.QTY_2;
                                        _self.CREATETYPE = "Auto";
                                    }
                                    else {
                                        _self.msg_NotFind();
                                    }
                                }
                            );
                        $.submitForm(_ajax);
                    }

                },
            })
        })
    </script>
