@{
    ViewBag.Title = RES.BLL.Face.LOTHOLD;
    ViewBag.FunctionName = RES.BLL.Face.LOTHOLD;
}
<h3>
    @ViewBag.Title
    <small></small>
</h3>
@Html.Partial("../LotInfo")

<div id="app">
    <div class="toolbar">
        <div class="btn-group">
            <el-button type="primary" class="btn"
                       icon="el-icon-caret-right"
                       :disabled="exec_disabled"
                       v-on:click="Exec">
                @RES.BLL.Face.FunctionBarOKButton
            </el-button>
        </div>
    </div>
    <div class="panel b">
        <div class="panel-body row">
            <div class="form-group col-lg-6 has-success  has-feedback">
                <label>@RES.BLL.Face.LotNo</label>
                <input ref="LOT" class="form-control" type="text" v-model="CurrentLot.LOT"
                       placeholder="@RES.BLL.Message.PleaseInputLot"
                       v-on:keyup.enter="Query(CurrentLot.LOT)" />
            </div>
            <div class="form-group col-lg-6">
                <label>@RES.BLL.Face.LOAD_REASON</label>
                <x-reason-select ref="reason" placeholder="@RES.BLL.Message.PleaseScanTheBarcodeOrUseKeywords" required
                                 v-model="reason"
                                 :options="options"
                                 :selectize_ops="selectize_ops">
                </x-reason-select>
            </div>
            <div class="form-group col-lg-12">
                <label>@RES.BLL.Face.Description</label>
                <textarea rows="5" class="form-control" v-model="description"></textarea>
            </div>
        </div>
        <el-tabs type="border-card">
            <el-tab-pane label="@RES.BLL.Face.LotInfo">
                <x-lot-info ref="lotinfo" :lotinfo="CurrentLot"></x-lot-info>
            </el-tab-pane>
            <el-tab-pane label="@RES.BLL.Face.LotHoldInfo">
                <div class="col-lg-12 jqgrid-responsive mb-lg">
                    <el-table :data="HoldInfoList"
                              empty-text=" "
                              style="width: 100% ">
                        <el-table-column prop="PRE_HOLD_STATUS"
                                         label="@RES.BLL.Face.OLD_STATUS"
                                         width="180">
                        </el-table-column>
                        <el-table-column prop="HOLD_REASON"
                                         label="@RES.BLL.Face.HOLD_REASON"
                                         width="180">
                        </el-table-column>
                        <el-table-column prop="HOLD_DESCRIPTION"
                                         label="@RES.BLL.Face.HOLD_DESCRIPTION">
                        </el-table-column>
                        <el-table-column prop="CREATE_DATE"
                                         label="@RES.BLL.Face.CREATE_DATE">
                        </el-table-column>
                    </el-table>
                </div>
            </el-tab-pane>
        </el-tabs>
    </div>
</div>
@section Styles {
    @Styles.Render(eBundle.selectize_CSS)
    @Styles.Render(eBundle.elUI_CSS)

}

@section Scripts {
    @Scripts.Render(eBundle.selectize_JS)
    @Scripts.Render(eBundle.Vue_MES)
    @Scripts.Render(eBundle.elUI_JS)
}

<script>
    //https://element.eleme.cn/
    //https://element.eleme.cn/#/zh-CN/component/table
    $(() => {
        new Vue({
            el: '#app',
            data() {
                return {
                    CurrentLot: {
                        LOT:'201-20121129-35'
                    },
                    options:[] ,
                    reason: [],
                    description: "",
                    exec_disabled: true,
                    selectize_ops:{
                        labelField: 'Display',
                        valueField: 'No',
                        searchField: ['Display', 'No'],
                    },
                    HoldInfoList:[]
                }
            },
            methods: {
                msg_CheckHoldSuccessful() {
                    let { LOT = "" } = this.CurrentLot;
                    var options = {
                        type: 'success',
                        title: ,
                        timer: 1000 * 10,
                        confirmButtonText: '@RES.BLL.Face.Close',
                    };
                    $.showMessageFire(options);
                },
                msg_scode() {
                    let { LOT = "" } = this.CurrentLot;
                    var msg = '@RES.BLL.Message.CheckHoldSuccessful'.replace('{0}', LOT);
                    this.$Alert.Err(msg);
                },

                Init_UI() {
                    this.reason = [];
                    this.description = "";
                    this.HoldInfoList = [];

                },
                Query(LOT) {
                    var _self = this;
                    _self.Init_UI();
                    _self.exec_disabled = true;

                    var _ajax = {
                        url: "@Url.Action("GetData", new { area = "WIP" })",
                        type:'get',
                        param: {
                            Lot:LOT,
                            FunName: "HoldLot"
                        },
                        success(res) {
                            let { Success, CurrentLot ,ReasonList,HoldInfoList=[]} = res;
                            if (CurrentLot != null && CurrentLot.IsExist) {
                                _self.exec_disabled = false;
                                _self.CurrentLot = CurrentLot;
                                _self.options = ReasonList;
                                _self.HoldInfoList = HoldInfoList;
                            }
                            else {
                                _self.$refs.lotinfo.err_NotFind();
                            }
                        }
                    };
                    $.submitForm(_ajax);
                },
                Exec() {
                    var _self = this;
                    if (_self.reason.length == 0) {
                        _self.$refs.reason.err_REASON
                            ('@string.Format(RES.BLL.Message.FieldRequired,@RES.BLL.Face.ACTION_REASON)',
                            '@RES.BLL.Face.Close'
                            );
                        return;
                    }

                    var _ajax = {
                        url: "@Url.Action("Exec", new { area = "WIP" })",
                        type:'post',
                        param: {
                            CurrentLot: _self.CurrentLot.LOT,
                            Reason : _self.reason,
                            Description: _self.description,
                            FunName: "HoldLot"
                        },
                        success(res) {
                            let { Success, Data = {}} = res;
                            if (Success) {
                                _self.Init_UI();

                                let { HoldInfoList = [] } = Data;
                                _self.HoldInfoList = HoldInfoList;
                                _self.msg_CheckHoldSuccessful();
                            }
                            else {
                                _self.msg_CannotFindData();
                            }
                        }
                    };
                    $.submitForm(_ajax);
                },
            }
        })
    });
</script>
